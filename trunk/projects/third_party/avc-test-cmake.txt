AUX_SOURCE_DIRECTORY(./encoder/ avce_test_src)
MESSAGE(INFO " AVCE_TEST_SRC: ${avce_test_src}")
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/projects/third_party/libavc/encoder)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/projects/third_party/libavc/common)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/projects/third_party/libavc/test/encoder)

if (ANDROID)
  SET(CMAKE_EXE_LINKER_FLAGS "-pie -fPIE -llog ${CMAKE_EXE_LINKER_FLAGS}")
endif (ANDROID)

SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}")
MESSAGE(INFO " CMAKE_EXE_LINKER_FLAGS: ${CMAKE_EXE_LINKER_FLAGS}")

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_PRJ_CXX_FLAGS}")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${CMAKE_PRJ_C_FLAGS} -DPROFILE_ENABLE -DARM -DMD5_DISABLE -fPIC -Wno-error")
MESSAGE(INFO " avce_utest CMAKE_C_FLAGS: ${CMAKE_C_FLAGS}")
MESSAGE(INFO " avce_utest CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")

ADD_EXECUTABLE(avce_utest ${avce_test_src})
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
TARGET_LINK_LIBRARIES(avce_utest libavcenc)
TARGET_LINK_LIBRARIES(avce_utest pthread m)

#SET(RTCP_TEST_SRC utest_rtcp.cpp)
#ADD_EXECUTABLE(rtcp_utest ${RTCP_TEST_SRC})
#TARGET_LINK_LIBRARIES(rtcp_utest libos libutility librtp_rtcp)

