cmake_minimum_required(VERSION 2.8)

PROJECT(TestCMAKE)

MESSAGE(INFO " PROJECT_BINARY_DIR: ${PROJECT_BINARY_DIR}")
MESSAGE(INFO " PROJECT_SOURCE_DIR: ${PROJECT_SOURCE_DIR}")

if (ANDROID)
  ADD_DEFINITIONS(-D_OS_ANDROID -D_OS_LINUX)
elseif(LINUX)
  ADD_DEFINITIONS(-D_OS_LINUX)
else(ANDROID)
  ADD_DEFINITIONS(-D_OS_LINUX)
endif (ANDROID)

#SET(THIRD_PARTY_ENABLE True)

if (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
  SET(ARCH_x86_64 True)
elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86")
  SET(ARCH_x86 True)
elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "armv7-a")
  SET(ARCH_arm True)
  #SET(ARCH_ARM_HAVE_NEON True)
endif()

SET(CMAKE_PRJ_C_FLAGS "-Werror -Wall -g -O2")
SET(CMAKE_PRJ_CXX_FLAGS "-Werror -Wall -g -O2")

MESSAGE(INFO " CMAKE_SYSTEM: ${CMAKE_SYSTEM}")
MESSAGE(INFO " CMAKE_SYSTEM_NAME: ${CMAKE_SYSTEM_NAME}")
MESSAGE(INFO " CMAKE_SYSTEM_PROCESSOR: ${CMAKE_SYSTEM_PROCESSOR}")
MESSAGE(INFO " IS ANDROID: ${ANDROID}")

MESSAGE(INFO " PRJ_C_FLAGS: ${CMAKE_PRJ_C_FLAGS}")
MESSAGE(INFO " PRJ_CXX_FLAGS: ${CMAKE_PRJ_CXX_FLAGS}")

ADD_SUBDIRECTORY(os)
ADD_SUBDIRECTORY(utility)
ADD_SUBDIRECTORY(utest)
ADD_SUBDIRECTORY(projects)
