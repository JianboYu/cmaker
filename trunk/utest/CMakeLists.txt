SET(OS_TEST_SRC utest_os.cpp)
MESSAGE(INFO " utest_os OS_TEST_SRC: ${OS_TEST_SRC}")
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/os/inc)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/core/inc)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/utility/inc)

if (ANDROID)
  SET(CMAKE_EXE_LINKER_FLAGS "-pie -fPIE -llog ${CMAKE_EXE_LINKER_FLAGS}")
endif (ANDROID)

MESSAGE(INFO " utest_os CMAKE_EXE_LINKER_FLAGS: ${CMAKE_EXE_LINKER_FLAGS}")

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_PRJ_CXX_FLAGS} -pthread")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${CMAKE_PRJ_C_FLAGS} -pthread")
MESSAGE(INFO " utest_os CMAKE_C_FLAGS: ${CMAKE_C_FLAGS}")
MESSAGE(INFO " utest_os CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")

ADD_EXECUTABLE(os_utest ${OS_TEST_SRC})
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
TARGET_LINK_LIBRARIES(os_utest libos)

SET(UTILITY_TEST_SRC utest_utility.cpp)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/utility/inc)
ADD_EXECUTABLE(utility_utest ${UTILITY_TEST_SRC})
TARGET_LINK_LIBRARIES(utility_utest libutility libos)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_PRJ_CXX_FLAGS} -pthread --std=c++11")
SET(UTILITY_TEST_SRC utest_media.cpp)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/os/inc)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/utility/inc)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/projects/omxil/inc)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/projects/protocols/rtp_rtcp/inc)
ADD_EXECUTABLE(media_utest ${UTILITY_TEST_SRC})
TARGET_LINK_LIBRARIES(media_utest libutility libos libomxil librtp_rtcp)
